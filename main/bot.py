import config
from parsing import tululu_parser, get_mp3
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardRemove, ReplyKeyboardMarkup, KeyboardButton


bot = Bot(token=config.token)
dp = Dispatcher(bot)

flag_audiobook_name = False
has_list_of_books = False
books_names = list()
books = list()

# –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    global flag_audiobook_name, has_list_of_books
    flag_audiobook_name = False
    has_list_of_books = False
    button1 = KeyboardButton("–ü–æ–ª—É—á–∏—Ç—å –∞—É–¥–∏–æ–∫–Ω–∏–≥—É üìñ")
    button2 = KeyboardButton("–ò–Ω—Ñ–æ üîé")
    button3 = KeyboardButton("–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π üí∏")
    main_keyboard = ReplyKeyboardMarkup(resize_keyboard=True).row(button1).row(button2, button3)
    await message.answer("–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ üëá", reply_markup=main_keyboard)


# –ü–æ–ª—É—á–µ–Ω–∏–µ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏
@dp.message_handler()
async def getter_audiobook(message: types.Message):
    global flag_audiobook_name, books_names, has_list_of_books, books

    if message.text.lower() == "–º–µ–Ω—é":
        await send_welcome(message)

    if has_list_of_books: # –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏
        book_name = message.text
        if book_name == "–ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞":
            has_list_of_books = False
            flag_audiobook_name = True
            await message.answer("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏ –∫–∞–∫-–Ω–∏–±—É–¥—å –ø–æ-–¥—Ä—É–≥–æ–º—É", reply_markup=types.ReplyKeyboardRemove())
        elif book_name not in books_names:
            await message.answer("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç")
        else:
            await message.answer(
                "–ù–∞—á–∞–ª–æ—Å—å —Å–æ–∑–¥–∞–Ω–∏–µ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ, —ç—Ç–æ—Ç –ø—Ä–æ—Ü–µ—Å—Å –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–ª–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è", 
                reply_markup=types.ReplyKeyboardRemove()
            )
            mp3_dir = get_mp3(book_name, books_names, books)
            audio = open(mp3_dir, 'rb')
            await bot.send_audio(message.chat.id, audio)
            await send_welcome(message)

    if flag_audiobook_name: # –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª –ü–æ–ª—É—á–∏—Ç—å –∞—É–¥–∏–æ–∫–Ω–∏–≥—É
        user_search = message.text
        if user_search != "–ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞":
            flag_audiobook_name = False
            choose_keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
            books_names, books = tululu_parser(user_search)
            if len(books_names) == 0:
                has_list_of_books = False
                flag_audiobook_name = True
                await message.answer("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏ –∫–∞–∫-–Ω–∏–±—É–¥—å –ø–æ-–¥—Ä—É–≥–æ–º—É", reply_markup=types.ReplyKeyboardRemove())
            else:
                for i in range(len(books_names)):
                    button = KeyboardButton(books_names[i])
                    choose_keyboard.row(button)
                choose_keyboard.row("–ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞")
                has_list_of_books = True
                await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤", reply_markup=choose_keyboard)

    if message.text == "–ü–æ–ª—É—á–∏—Ç—å –∞—É–¥–∏–æ–∫–Ω–∏–≥—É üìñ":
        flag_audiobook_name = True
        has_list_of_books = False
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –∞–≤—Ç–æ—Ä–∞ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è", reply_markup=types.ReplyKeyboardRemove())
    
    if message.text == "–ò–Ω—Ñ–æ üîé" or message.text.lower() == "–∏–Ω—Ñ–æ" or message.text == "/help":
        flag_audiobook_name = False
        has_list_of_books = False
        await message.answer("–Ø —Å–æ–∑–¥–∞–Ω, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞–≤–∞—Ç—å –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏ –ø–æ –í–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É. " + 
                            "–ù–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏, —á—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –º–Ω–æ–π. " +
                            '–ù–∞–ø–∏—à–∏—Ç–µ "–º–µ–Ω—é", —á—Ç–æ–±—ã –≤—ã–∑–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é')
        
    if message.text == "–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π üí∏":
        await message.answer("–í–æ—Ç —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –¥–µ–Ω–µ–∂–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤: https://www.donationalerts.com/id8359254\n" +
                             "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–∫–∞–∑–∞–Ω–Ω—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É!")


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
