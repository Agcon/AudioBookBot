#TODO: 1. –£–±—Ä–∞—Ç—å –∑–∞–≥–ª—É—à–∫—É –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
#TODO: 2. –ù–∞–ø–∏—Å–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ

import config
from parsing import tululu_parser, get_mp3
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardRemove, ReplyKeyboardMarkup, KeyboardButton


bot = Bot(token=config.token)
dp = Dispatcher(bot)

flag_audiobook_name = False
has_list_of_books = False
books_names = list()
books = list()
#–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    button1 = KeyboardButton("–ü–æ–ª—É—á–∏—Ç—å –∞—É–¥–∏–æ–∫–Ω–∏–≥—É üìñ")
    button2 = KeyboardButton("–ò–Ω—Ñ–æ üîé")
    button3 = KeyboardButton("–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π üí∏")
    button4 = KeyboardButton("–ò–Ω—Ñ–æ")
    main_keyboard = ReplyKeyboardMarkup(resize_keyboard=True).row(button1,button2).row(button3,button4)
    # 1.
    await message.reply("–ó–∞–≥–ª—É—à–∫–∞", reply_markup=main_keyboard)


#–ü–æ–ª—É—á–µ–Ω–∏–µ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏, 
@dp.message_handler()
async def getter_audiobook(message: types.Message):
    global flag_audiobook_name, books_names, has_list_of_books, books
    if has_list_of_books:
        book_name = message.text
        await message.answer("–ù–∞—á–∞–ª–æ—Å—å —Å–æ–∑–¥–∞–Ω–∏–µ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏")
        get_mp3(book_name, books_names, books)
        
        # TODO –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –º–ø3

    if flag_audiobook_name:
        user_search = message.text
        flag_audiobook_name = False
        choose_keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
        books_names, books = tululu_parser(user_search)
        for i in range(len(books_names)):
            button = KeyboardButton(books_names[i])
            choose_keyboard.row(button)
        choose_keyboard.row("–ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞")
        has_list_of_books = True
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤", reply_markup=choose_keyboard)

    if message.text == "–ü–æ–ª—É—á–∏—Ç—å –∞—É–¥–∏–æ–∫–Ω–∏–≥—É üìñ":
        flag_audiobook_name = True
        await message.reply("–í–≤–µ–¥–∏—Ç–µ –∞–≤—Ç–æ—Ä–∞ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è")
    if message.text == "–ò–Ω—Ñ–æ üîé" or message.text.lower() == "–∏–Ω—Ñ–æ" or message.text == "/help":
        #2.
        await message.reply("–ó–¥–µ—Å—å —Å–æ–¥–µ—Ä–∂–∏—Ç—å—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ")


if __name__ == '__main__':
   executor.start_polling(dp, skip_updates=True)